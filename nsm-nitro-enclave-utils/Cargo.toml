[package]
name = "nsm-nitro-enclave-utils"
description = "nsm-nitro-enclave-utils simplifies development for AWS Nitro Enclaves by enabling the reading and verifying of mocked attestation documents while in local development environments. Once your ready to go to production, it can do the same with authentic, AWS-signed, attestation documents. With WebAssembly support and a familiar API, it offers seamless integration across development and production environments."
repository = "https://github.com/tannaurus/nsm-nitro-enclave-utils/"
readme = "../README.md"
version = "0.1.2"
edition = "2021"
license = "MPL-2.0"
authors = ["Tanner Gill <contacttannergill@gmail.com>"]
keywords = ["aws", "nitro", "enclave"]
categories = ["emulators", "development-tools", "wasm"]

[features]
default = ["nitro"]
rand = ["dep:rand", "dep:ring"]
seed = ["dep:sha2"]
verify = ["dep:rustls-webpki", "x509-cert", "p384", "dep:ring"]
nitro = ["aws-nitro-enclaves-nsm-api/nix"]
pki = ["p384"]

[dependencies]
serde_bytes = "0.11"
hex = "0.4"
coset = { version = "0.3", features = ["std"] }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
sealed = "0.6"
aws-nitro-enclaves-nsm-api = { version = "0.4.0", default-features = false }
sha2 = { version = "0.10", optional = true }
rand = { version = "0.9", optional = true }
rustls-webpki = { version = "0.103", features = ["ring"], optional = true }
rustls-pki-types = { version = "1.11.0" }
x509-cert = { version = "0.2", features = ["builder"], optional = true }
p384 = { version = "0.13", optional = true }

[target.'cfg(all(target_arch = "wasm32", target_os = "unknown"))'.dependencies]
ring = { version = "0.17", features = ["wasm32_unknown_unknown_js"], optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3"
rand = "0.9"
sha2 = { version = "0.10", features = ["oid"] }
p384 = { version = "0.13" }
nsm-nitro-enclave-utils-keygen = { path = "../nsm-nitro-enclave-utils-keygen" }
